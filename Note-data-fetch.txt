1.Your page CONTENT depends on external data: Use getStaticProps:

        function Blog({ posts }) {
          // Render posts...
        }

        // This function gets called at build time
        export async function getStaticProps() {
          // Call an external API endpoint to get posts
          const res = await fetch('https://.../posts')
          const posts = await res.json()

          // By returning { props: { posts } }, the Blog component
          // will receive `posts` as a prop at build time
          return {
            props: {
              posts,
            },
          }
        }

        export default Blog

2. Your page PATHS depend on external data: Use getStaticPaths (usually in addition to getStaticProps).

        function Post({ post }) {
          // Render post...
        }

        // This function gets called at build time
        export async function getStaticPaths() {
          // Call an external API endpoint to get posts
          const res = await fetch('https://.../posts')
          const posts = await res.json()

          // Get the paths we want to pre-render based on posts
          const paths = posts.map((post) => ({
            params: { id: post.id },
          }))

          // We'll pre-render only these paths at build time.
          // { fallback: false } means other routes should 404.
          return { paths, fallback: false }
        }

        // This also gets called at build time
        export async function getStaticProps({ params }) {
          // params contains the post `id`.
          // If the route is like /posts/1, then params.id is 1
          const res = await fetch(`https://.../posts/${params.id}`)
          const post = await res.json()

          // Pass post data to the page via props
          return { props: { post } }
        }

        export default Post


3.
Maybe your page shows frequently updated data, and the page content changes on every request.
In cases like this, you can do one of the following: Client-side Rendering | Server-Side Rendering

Server-side Rendering
Also referred to as "SSR" or "Dynamic Rendering".
As you can see, getServerSideProps is similar to getStaticProps, but the difference is that getServerSideProps is run on every request instead of on build time.

        function Page({ data }) {
          // Render data...
        }

        // This gets called on every request
        export async function getServerSideProps() {
          // Fetch data from external API
          const res = await fetch(`https://.../data`)
          const data = await res.json()

          // Pass data to the page via props
          return { props: { data } }
        }

        export default Page


































