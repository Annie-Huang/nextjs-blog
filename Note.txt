https://nextjs.org/learn/basics/create-nextjs-app/setup

https://github.com/Annie-Huang/nextjs-blog

https://nextjs.org/docs/basic-features/built-in-css-support#sass-support

Up to
https://nextjs.org/learn/basics/navigate-between-pages/client-side
------------------------------------------------------------------------------------

C:\react>npx create-next-app nextjs-blog --use-npm --example "https://github.com/vercel/next-learn-starter/tree/master/learn-starter"

http://localhost:3000
http://localhost:3000/posts/first-post


pages/index.js is associated with the / route.
pages/posts/first-post.js is associated with the /posts/first-post route.


Advantage of using Next.js
- Next.js does code splitting automatically, so each page only loads what’s necessary for that page.
  This ensures that the homepage loads quickly even if you have hundreds of pages.
- In a production build of Next.js, whenever Link components appear in the browser’s viewport, Next.js automatically
  prefetches the code for the linked page in the background. By the time you click the link, the code for the destination
  page will already be loaded in the background, and the page transition will be near-instant!


If you need to add attributes like, for example, className, add it to the a tag, not to the Link tag.
    <Link href="/">
      <a className="foo" target="_blank" rel="noopener noreferrer">
        Hello World
      </a>
    </Link>


Next.js provides an Image component out of the box:
- Ensuring your image is responsive on different screen sizes
- Optimizing your images with a third-party tool or library. This allows for resizing, optimizing, and serving images
  in modern formats like WebP when the browser supports it. This avoids shipping large images to devices with a smaller viewport.
  It also allows Next.js to automatically adopt future image formats and serve them to browsers that support those formats.
- Only loading images when they enter the viewport
